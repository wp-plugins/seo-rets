jQuery(document).ready(function() {	var multiple = false;	jQuery('#multiple-area').click(function(){		if ( multiple ) {			multiple = false;						jQuery("#area-name").removeAttr("multiple").removeAttr("size");			jQuery("#city-name").removeAttr("multiple").removeAttr("size");			jQuery("#zip-name").removeAttr("multiple").removeAttr("size");						jQuery(this).html("+ Select Multiple");		} else {			multiple = true;					jQuery("#area-name").attr({"multiple" : "multiple", "size" : 10});			jQuery("#city-name").attr({"multiple" : "multiple", "size" : 10});			jQuery("#zip-name").attr({"multiple" : "multiple", "size" : 10});			jQuery(this).html("- Select Single");		}			});});function updateArea() {	jQuery('#city-name').hide();	jQuery('#area-name').hide();	jQuery('#zip-name').hide();	jQuery('#' + jQuery('#area-type').val() + '-name').show();}var srListings = (function() {	var nodeEditing;	var returnObj;	var multiListingType = 'quick-search';	returnObj = {		init: function() {			var startNode = tinyMCEPopup.editor.selection.getStart();			var nodeTextContent = startNode ? startNode.textContent || startNode.innerText : '';			var linkId, area, minPrice, maxPrice, checkedPropertyTypes, sortColumn, sortDirection, count;			if (/^\[sr-listings /.test(nodeTextContent) && startNode.tagName == 'P') {				nodeEditing = startNode;				tinyMCEPopup.editor.execCommand('mceSelectNode', false, nodeEditing);				linkId = /^[^\]]+ linkid=['"]?(\d+)/.exec(nodeTextContent);				count = /^[^\]]+ limit=['"]?(\d+)/.exec(nodeTextContent);								if ( linkId ) {					jQuery('#saved-link').val(linkId[1]);				} else {					area = /^[^\]]+ (city|community|tract|zip)=['"]([^'"]+)/.exec(nodeTextContent);					checkedPropertyTypes = /^[^\]]+ propertytypes=['"]?([\d,]+)/.exec(nodeTextContent);					if ( area ) jQuery('#area-type').val(area[1]);					if ( minPrice ) jQuery('#min-price').val(minPrice[1]);					if ( maxPrice ) jQuery('#max-price').val(maxPrice[1]);					if ( checkedPropertyTypes ) {						checkedPropertyTypes = checkedPropertyTypes[1].split(',');												for (var i = 0, l = checkedPropertyTypes.length; i < l; ++i) {							jQuery('#property-type-' + checkedPropertyTypes[i]).each(function() { this.checked = true; });						}					}				}				if (count) jQuery('#number-to-display').val(count[1]);				this.changeTab(mlsid ? 'pre-saved-links' : 'quick-search');			}		},		changeTab: function(type) {			multiListingType = type;			if ( multiListingType == 'quick-search' ) {				mcTabs.displayTab('custom_search_tab', 'multiple-properties');			} else if (multiListingType == 'pre-saved-links') {				mcTabs.displayTab('saved_links_tab', 'single-property');			}		},		insert: function() {			var shortcode = '<p>[sr-listings';			var minPrice, maxPrice, checkedPropertyTypes, sortOrder, count, onlyshow;			minPrice = parseInt(jQuery('#min-price').val());			maxPrice = parseInt(jQuery('#max-price').val());			checkedPropertyTypes = jQuery('#property-type-container input:checked').map(function() { return this.value; }).get().join(',');			sortOrder = jQuery('#display-order-column').val().split('|');			count = parseInt(jQuery('#number-to-display').val());			largerPhotos = !!jQuery('#larger-photos:checked').length;			onlyshow = jQuery("#onlyshow").is(':checked');						if ( multiListingType == 'quick-search' ) {							type = jQuery('#area-type').val();								var place = unescape(jQuery('#' + type + '-name').val());								if ( place != "" ) {					shortcode += ' ' + type + '="' +  place + '"';				}								if ( !isNaN(minPrice) && minPrice > 0 ) shortcode += ' price1=">:' + minPrice + '"';				if ( !isNaN(maxPrice) && maxPrice > 0 ) shortcode += ' price2="<:' + maxPrice + '"';				if ( checkedPropertyTypes ) shortcode += ' type="' + checkedPropertyTypes + '"';				if ( sortOrder.length > 1 ) {					shortcode += ' order="' + sortOrder[0] + ':' + sortOrder[1] + '"';				}							} else if (multiListingType == 'pre-saved-links') {							shortcode += ' mls_id="' + jQuery('#mls-id').val() + '"';							}			if (!isNaN(count) && count > 0) shortcode += ' perpage="' + count + '"';						if ( onlyshow ) shortcode += ' onlymylistings="yes"';						shortcode += ']</p>';			tinyMCEPopup.editor.execCommand(nodeEditing ? 'mceReplaceContent' : 'mceInsertContent', false, shortcode);			tinyMCEPopup.close();		}	};		return returnObj;})();tinyMCEPopup.onInit.add(srListings.init, srListings);