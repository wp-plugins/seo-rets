jQuery(document).ready(function() {	var multiple = false;	jQuery('#multiple-area').click(function(){		if ( multiple ) {			multiple = false;						jQuery("#area-name").removeAttr("multiple").removeAttr("size");			jQuery("#city-name").removeAttr("multiple").removeAttr("size");			jQuery("#zip-name").removeAttr("multiple").removeAttr("size");						jQuery(this).html("+ Select Multiple");		} else {			multiple = true;					jQuery("#area-name").attr({"multiple" : "multiple", "size" : 10});			jQuery("#city-name").attr({"multiple" : "multiple", "size" : 10});			jQuery("#zip-name").attr({"multiple" : "multiple", "size" : 10});			jQuery(this).html("- Select Single");		}	});});function updateArea() {	jQuery('#city-name').hide();	jQuery('#area-name').hide();	jQuery('#zip-name').hide();	jQuery('#' + jQuery('#area-type').val() + '-name').show();}var srListings = (function() {	var nodeEditing;	return {		init: function() {			var startNode = tinyMCEPopup.editor.selection.getStart();			var nodeTextContent = startNode ? startNode.textContent || startNode.innerText : '';			var linkId, area, minPrice, maxPrice, checkedPropertyTypes, sortColumn, sortDirection, count;			if (/^\[sr-listings /.test(nodeTextContent) && startNode.tagName == 'P') {				nodeEditing = startNode;				tinyMCEPopup.editor.execCommand('mceSelectNode', false, nodeEditing);				count = /^[^\]]+ count=['"]?(\d+)/.exec(nodeTextContent);				area = /^[^\]]+ (city|community|tract|zip)=['"]([^'"]+)/.exec(nodeTextContent);				minPrice = /^[^\]]+ minprice=['"]?(\d+)/.exec(nodeTextContent);				maxPrice = /^[^\]]+ maxprice=['"]?(\d+)/.exec(nodeTextContent);				checkedPropertyTypes = /^[^\]]+ propertytypes=['"]?([\d,]+)/.exec(nodeTextContent);				sortColumn = /^[^\]]+ orderby=['"]?([^'" ]+)/.exec(nodeTextContent);				sortDirection = /^[^\]]+ orderdir=['"]?([^'" ]+)/.exec(nodeTextContent);				if (area) jQuery('#area-type').val(area[1]);				if (minPrice) jQuery('#min-price').val(minPrice[1]);				if (maxPrice) jQuery('#max-price').val(maxPrice[1]);				if (checkedPropertyTypes) {					checkedPropertyTypes = checkedPropertyTypes[1].split(',');					for (var i = 0, l = checkedPropertyTypes.length; i < l; ++i) jQuery('#property-type-' + checkedPropertyTypes[i]).each(function() { this.checked = true; });				}				if (sortColumn) {					sortDirection = sortDirection ? sortDirection[1] : 'DESC';					jQuery('#display-order-column').val(sortColumn[1] + '|' + sortDirection);				}				if (count) jQuery('#number-to-display').val(count[1]);				this.changeTab('quick-search');			}		},		changeTab: function(type) {			mcTabs.displayTab('custom_search_tab', 'multiple-properties');		},		insert: function() {			var shortcode = '<p>[sr-map';			var minPrice, maxPrice, checkedPropertyTypes, sortOrder, count;						minPrice = parseInt(jQuery('#min-price').val());			maxPrice = parseInt(jQuery('#max-price').val());			checkedPropertyTypes = jQuery('#property-type-container input:checked').map(function() { return this.value; }).get().join(',');			sortOrder = jQuery('#display-order-column').val().split('|');			count = parseInt(jQuery('#number-to-display').val());						type = jQuery('#area-type').val();			shortcode += ' ' + type + '="' + unescape(jQuery('#' + type + '-name').val()) + '"';			if (!isNaN(minPrice) && minPrice > 0) shortcode += ' price1="&gt;=:' + minPrice + '"';			if (!isNaN(maxPrice) && maxPrice > 0) shortcode += ' price2="&lt;=:' + maxPrice + '"';			if (checkedPropertyTypes) shortcode += ' type="' + checkedPropertyTypes + '"';			if ( sortOrder.length > 1 ) {				shortcode += ' order="' + sortOrder[0] + ':' + sortOrder[1] + '"';			}						if (!isNaN(count) && count > 0) shortcode += ' limit="' + count + '"';			shortcode += ']</p>';			tinyMCEPopup.editor.execCommand(nodeEditing ? 'mceReplaceContent' : 'mceInsertContent', false, shortcode);			tinyMCEPopup.close();		}	};	})();tinyMCEPopup.onInit.add(srListings.init, srListings);